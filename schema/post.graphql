type Post {
  id: ID!
  author: User
  url: String
  isLiked: Boolean
  likeCount: Int
  title: String
  description: String
  previewImage: String
  hashTags: [HashTag]
  createdAt: Date
}

type Query {
  post(id: ID!): Post
  postGetMany(input: PostGetManyInput!): postGetManyPayload
}

type Mutation {
  postCreate(input: PostCreateInput!): PostCreatePayload
  postUpdate(input: PostUpdateInput!): PostUpdatePayload
  postDelete(id: ID!): Boolean!
}

input PostCreateInput {
  authorID: String!
  url: String!
  hashTags: [String!]
}

input PostUpdateInput {
  id: ID!
  url: String
  hashTags: [String!]
  likeCount: Int
}

input PostFilter {
  hashTagIDs: [ID!]
  authorIDs: [ID!]
}

enum PostOrderField {
  LIKE_COUNT
  CREATED_AT
}

input PostOrder {
  field: PostOrderField
  direction: OrderDirection
}

input PostGetManyInput {
  filterBy: PostFilter
  orderBy: PostOrder
}

type postGetManyPayload {
  posts: [Post!]!
}

type PostCreatePayload {
  post: Post
}

type PostUpdatePayload {
  post: Post
}
